{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/livewire-starter-kit",
    "type": "project",
    "description": "The official Laravel starter kit for Livewire.",
    "keywords": [
        "laravel",
        "framework"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "laravel/framework": "^12.0",
        "laravel/reverb": "^1.4",
        "laravel/tinker": "^2.10.1",
        "livewire/flux": "^2.0",
        "livewire/livewire": "^3.4",
        "livewire/volt": "^1.0",
        "pgvector/pgvector": "^0.2.2",
        "prism-php/prism": "^0.67.0"
    },
    "require-dev": {
        "barryvdh/laravel-debugbar": "^3.15",
        "fakerphp/faker": "^1.23",
        "laravel/breeze": "^2.3",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.18",
        "laravel/sail": "^1.41",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "phpunit/phpunit": "^11.5.3"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan queue:work --queue=broadcasts\" \"php artisan pail --timeout=0\" \"php artisan reverb:start #--debug\" \"npm run dev\" --names=server,queue,broadcast-queue,logs,reverb,vite"
        ],
        "import": [
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_01_ElementareDatentypen elementare_datentypen",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_02_AlgoBewertung algorithmenbewertung_und_laufzeit",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_03_Graphen graphen_baeume",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_04_Baeume graphen_baeume",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_05_GraphAlgo_1 graphen_baeume",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_06_GraphAlgo_2 graphen_baeume",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_07_Sortieren_1 sortierung",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_08_Sortieren_2 sortierung",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_09_Sortieren_3 sortierung",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_10_Suchen_1 suchen",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_12_Suchen_3 suchen",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_14_Codierung codierung",
            "@php artisan import:knowledge-chunks data/AuD_Slides/md/AuD_15_Kompression kompression"
        ],
        "setup": [
            "composer install",
            "npm install",
            "npm run build",
            "cp .env.example .env",
            "@php artisan key:generate",
            "@php artisan storage:link",
            "docker compose up --wait",
            "@php artisan migrate --seed --force"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}
